From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AltronMaxX <max06112004@gmail.com>
Date: Mon, 12 Jun 2023 18:46:08 +0400
Subject: [PATCH] Remake-isTickThreadFor-function


diff --git a/src/main/java/io/papermc/paper/util/TickThread.java b/src/main/java/io/papermc/paper/util/TickThread.java
index d6aac4898b8d4ff6f8a9a489ae532655af2d545c..03853191c03d2873742798614f0dff045b30b004 100644
--- a/src/main/java/io/papermc/paper/util/TickThread.java
+++ b/src/main/java/io/papermc/paper/util/TickThread.java
@@ -137,24 +137,27 @@ public class TickThread extends Thread {
     }
 
     public static boolean isTickThreadFor(final ServerLevel world, final int chunkX, final int chunkZ) {
-        ThreadedRegionizer.ThreadedRegion<TickRegions.TickRegionData, TickRegions.TickRegionSectionData> region =
-            TickRegionScheduler.getCurrentRegion();
-        if (world == null) {
-            MinecraftServer.LOGGER.error("Failed to tick thread, because world is null");
-            return false;
-        }
-        if (region == null) {
-            try{
-                region = world.regioniser.getRegionAtSynchronised(chunkX, chunkZ);
-                if (region == null){
+        ThreadedRegionizer.ThreadedRegion<TickRegions.TickRegionData, TickRegions.TickRegionSectionData> region;
+        try{
+            MinecraftServer.LOGGER.info("Trying to tick region at position [" + chunkX + ", " + chunkZ + "]");
+            region = TickRegionScheduler.getCurrentRegion();
+            if (region == null){
+                try{
+                    region = world.regioniser.getRegionAtSynchronised(chunkX, chunkZ);
+                    if (region == null){
+                        MinecraftServer.LOGGER.warn("Region at position [" + chunkX + ", " + chunkZ + "] is null!");
+                        return isShutdownThread();
+                    }
+                } catch (Exception e) {
                     MinecraftServer.LOGGER.warn("Region at position [" + chunkX + ", " + chunkZ + "] is null!");
                     return isShutdownThread();
                 }
-            } catch (Exception e) {
-                MinecraftServer.LOGGER.warn("Region at position [" + chunkX + ", " + chunkZ + "] is null!");
-                return isShutdownThread();
             }
+        } catch (Exception e) {
+            MinecraftServer.LOGGER.warn("Region at position [" + chunkX + ", " + chunkZ + "] is null!");
+            return isShutdownThread();
         }
+
         return world.regioniser.getRegionAtUnsynchronised(chunkX, chunkZ) == region;
     }
 
