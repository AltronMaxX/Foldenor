From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AltronMaxX <max06112004@gmail.com>
Date: Mon, 12 Jun 2023 12:00:01 +0400
Subject: [PATCH] Fix-casting-for-secure-seed-feature


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index ebf76e8a1c4e63f972505a3000d55609ce63bf21..6b3e7813f01a6e464d652899dd33da5ae2d74cde 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -148,7 +148,7 @@ import net.minecraft.world.level.biome.BiomeManager;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.border.WorldBorder;
 import net.minecraft.world.level.dimension.LevelStem;
-import net.minecraft.world.level.levelgen.WorldOptions;
+import net.minecraft.world.level.levelgen.*;
 import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager;
 import net.minecraft.world.level.storage.*;
@@ -167,10 +167,6 @@ import net.minecraft.resources.RegistryOps;
 import net.minecraft.server.bossevents.CustomBossEvents;
 import net.minecraft.server.dedicated.DedicatedServer;
 import net.minecraft.server.dedicated.DedicatedServerProperties;
-import net.minecraft.world.level.levelgen.Heightmap;
-import net.minecraft.world.level.levelgen.PatrolSpawner;
-import net.minecraft.world.level.levelgen.PhantomSpawner;
-import net.minecraft.world.level.levelgen.WorldDimensions;
 import net.minecraft.world.level.levelgen.presets.WorldPresets;
 import net.minecraft.world.level.validation.ContentValidationException;
 import net.minecraft.world.phys.Vec2;
@@ -373,7 +369,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         this.customBossEvents = new CustomBossEvents();
         this.frameTimer = new FrameTimer();
         this.registries = worldstem.registries();
-        this.worldData = worldstem.worldData();
+        this.worldData = (NewWorldData) worldstem.worldData();
         if (false && !this.registries.compositeAccess().registryOrThrow(Registries.LEVEL_STEM).containsKey(LevelStem.OVERWORLD)) { // CraftBukkit - initialised later
             throw new IllegalStateException("Missing Overworld dimension data");
         } else {
@@ -570,7 +566,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 WorldDimensions.Complete worlddimensions_b = worlddimensions.bake(iregistry);
                 Lifecycle lifecycle = worlddimensions_b.lifecycle().add(worldloader_a.datapackWorldgen().allRegistriesLifecycle());
 
-                worlddata = new PrimaryLevelData(worldsettings, worldoptions, worlddimensions_b.specialWorldProperty(), lifecycle);
+                worlddata = new PrimaryLevelData(worldsettings, (NewWorldOptions) worldoptions, worlddimensions_b.specialWorldProperty(), lifecycle);
             }
             worlddata.checkName(name); // CraftBukkit - Migration did not rewrite the level.dat; This forces 1.8 to take the last loaded world as respawn (in this case the end)
             // Paper - move down
@@ -598,7 +594,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             ResourceKey<Level> worldKey = ResourceKey.create(Registries.DIMENSION, dimensionKey.location());
 
             if (dimensionKey == LevelStem.OVERWORLD) {
-                this.worldData = worlddata;
+                this.worldData = (NewWorldData) worlddata;
                 this.worldData.setGameType(((DedicatedServer) this).getProperties().gamemode); // From DedicatedServer.init
 
                 ChunkProgressListener worldloadlistener = this.progressListenerFactory.create(11);
